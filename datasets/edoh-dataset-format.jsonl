{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a new scene named 'MyScene'."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpass"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Add a circle with radius 2 and center at the origin to the scene."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle(radius=2, color=BLUE) \n\t\tself.add(circle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a text object saying 'Hello, World!' and add it to the scene."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttext = Text('Hello, World!') \n\t\tself.add(text)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Animate the circle to move 2 units to the right in 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle(radius=2, color=BLUE) \n\t\tself.add(circle) \n\t\tself.play(circle.animate.shift(RIGHT * 2), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a square with side length 3 and add it to the scene."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsquare = Square(side_length=3, color=RED) \n\t\tself.add(square)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the square by a factor of 2 in 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsquare = Square(side_length=3, color=RED) \n\t\tself.add(square) \n\t\tself.play(square.animate.scale(2), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a triangle with vertices at (-1, 0), (1, 0), and (0, 2) and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttriangle = Polygon((-1, 0), (1, 0), (0, 2), color=YELLOW) \n\t\tself.add(triangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the triangle by 90 degrees counterclockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttriangle = Polygon((-1, 0), (1, 0), (0, 2), color=YELLOW) \n\t\tself.add(triangle) \n\t\tself.play(triangle.animate.rotate(90 * DEGREES), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (0, 0)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2, color=BLUE) \n\t\trectangle.move_to((0, 0)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Add a text label 'A' at the coordinates (-2, 1) of the rectangle."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2, color=BLUE) \n\t\tlabel = Text('A').move_to((-2, 1)) \n\t\tself.add(rectangle, label)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a square with side length 2 and a circle with radius 1 to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsquare = Square(side_length=2, color=RED) \n\t\tcircle = Circle(radius=1, color=GREEN) \n\t\tvgroup = VGroup(square, circle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsquare = Square(side_length=2, color=RED) \n\t\tcircle = Circle(radius=1, color=GREEN) \n\t\tvgroup = VGroup(square, circle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create an axis with x-axis ranging from -5 to 5 and y-axis ranging from -3 to 3."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\taxes = Axes(x_range=(-5, 5), y_range=(-3, 3)) \n\t\tself.add(axes)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Plot a graph of the function y = sin(x) on the axis."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\taxes = Axes(x_range=(-5, 5), y_range=(-1, 1)) \n\t\tgraph = axes.get_graph(lambda \n\t\tx: \n\t\tnp.sin(x), color=PURPLE) \n\t\tself.add(axes, graph)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Add an arrow pointing downwards at the coordinates (-2, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tarrow = Arrow(start=(-2, 1), end=(-2, 0), color=YELLOW) \n\t\tself.add(arrow)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create an ellipse with major axis 2 and minor axis 1.5."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tellipse = Ellipse(width=2, height=1.5, color=ORANGE) \n\t\tself.add(ellipse)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the ellipse clockwise by 90 degrees over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tellipse = Ellipse(width=2, height=1.5, color=ORANGE) \n\t\tself.add(ellipse) \n\t\tself.play(ellipse.animate.rotate(90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular pentagon with side length 2.5 and color it cyan."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2.5, color=CYAN) \n\t\tself.add(pentagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the pentagon to the right by 3 units over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2.5, color=CYAN) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.shift(RIGHT * 3), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2.5 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2.5, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the hexagon by 120 degrees counterclockwise over 3 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2.5, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.rotate(-120 * DEGREES), run_time=3)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a text object saying 'Hello, Manim!' and position it at (0, 2)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttext = Text('Hello, Manim!') \n\t\ttext.move_to((0, 2)) \n\t\tself.add(text)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Add an arc with radius 3 and angle of 90 degrees centered at (-1, -1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tarc = Arc(radius=3, start_angle=0, angle=90 * DEGREES, color=PINK) \n\t\tarc.move_to((-1, -1)) \n\t\tself.add(arc)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 3 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a point at coordinates (1, 1) and color it red."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpoint = Dot((1, 1), color=RED) \n\t\tself.add(point)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a bezier curve with control points (-1, 0), (0, 2), and (2, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpoints = [(-1, 0), (0, 2), (2, 1)] \n\t\tcurve = VMobject() \n\t\tcurve.set_points_smoothly(points) \n\t\tself.add(curve)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular octagon with side length 2 and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\toctagon = RegularPolygon(n=8, radius=2, color=PURPLE) \n\t\tself.add(octagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the octagon by a factor of 1.5 in 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\toctagon = RegularPolygon(n=8, radius=2, color=PURPLE) \n\t\tself.add(octagon) \n\t\tself.play(octagon.animate.scale(1.5), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment connecting points (-1, -1) and (2, 2)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-1, -1), (2, 2)) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a triangle with vertices at (-1, 0), (1, 0), and (0, 2)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttriangle = Polygon((-1, 0), (1, 0), (0, 2)) \n\t\tself.add(triangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the triangle by 90 degrees counterclockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttriangle = Polygon((-1, 0), (1, 0), (0, 2)) \n\t\tself.add(triangle) \n\t\tself.play(triangle.animate.rotate(90 * DEGREES), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (0, 0)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((0, 0)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Add a text label 'A' at the coordinates (-2, 1) of the rectangle."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\tlabel = Text('A').move_to((-2, 1)) \n\t\tself.add(rectangle, label)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a square with side length 2 and a circle with radius 1 to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsquare = Square(side_length=2) \n\t\tcircle = Circle(radius=1) \n\t\tvgroup = VGroup(square, circle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsquare = Square(side_length=2) \n\t\tcircle = Circle(radius=1) \n\t\tvgroup = VGroup(square, circle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular pentagon with side length 2.5 and color it cyan."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2.5, color=CYAN) \n\t\tself.add(pentagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the pentagon to the right by 3 units over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2.5, color=CYAN) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.shift(RIGHT * 3), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2.5 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2.5, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the hexagon by 120 degrees counterclockwise over 3 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2.5, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.rotate(-120 * DEGREES), run_time=3)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a text object saying 'Hello, Manim!' and position it at (0, 2)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttext = Text('Hello, Manim!') \n\t\ttext.move_to((0, 2)) \n\t\tself.add(text)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Add an arc with radius 3 and angle of 90 degrees centered at (-1, -1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tarc = Arc(radius=3, start_angle=0, angle=90 * DEGREES) \n\t\tarc.move_to((-1, -1)) \n\t\tself.add(arc)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a triangle with vertices at (-1, 0), (1, 0), and (0, 2)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttriangle = Polygon((-1, 0), (1, 0), (0, 2)) \n\t\tself.add(triangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the triangle by 90 degrees counterclockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttriangle = Polygon((-1, 0), (1, 0), (0, 2)) \n\t\tself.add(triangle) \n\t\tself.play(triangle.animate.rotate(90 * DEGREES), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular decagon with side length 2 and color it pink."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tdecagon = RegularPolygon(n=10, radius=2, color=PINK) \n\t\tself.add(decagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the decagon by a factor of 2 in 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tdecagon = RegularPolygon(n=10, radius=2, color=PINK) \n\t\tself.add(decagon) \n\t\tself.play(decagon.animate.scale(2), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment connecting points (-2, 1) and (2, -1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, 1), (2, -1)) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a triangle and a circle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttriangle = Polygon((-1, 0), (1, 0), (0, 2)) \n\t\tcircle = Circle(radius=1) \n\t\tvgroup = VGroup(triangle, circle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 30 degrees counterclockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttriangle = Polygon((-1, 0), (1, 0), (0, 2)) \n\t\tcircle = Circle(radius=1) \n\t\tvgroup = VGroup(triangle, circle) \n\t\tself.add(vgroup) \n\t\tself.play(vgroup.animate.rotate(30 * DEGREES), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular nonagon with side length 2 and color it teal."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tnonagon = RegularPolygon(n=9, radius=2, color=TEAL) \n\t\tself.add(nonagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the nonagon to the right by 3 units over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tnonagon = RegularPolygon(n=9, radius=2, color=TEAL) \n\t\tself.add(nonagon) \n\t\tself.play(nonagon.animate.shift(RIGHT * 3), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create an arc with radius 2, angle of 180 degrees, and centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tarc = Arc(radius=2, start_angle=0, angle=180 * DEGREES) \n\t\tarc.move_to((1, 1)) \n\t\tself.add(arc)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a trapezoid with base lengths 2 and 4, and height 3."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttrapezoid = Polygon((-2, -1.5), (2, -1.5), (1, 1.5), (-1, 1.5)) \n\t\tself.add(trapezoid)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a point at coordinates (2, 2) and color it blue."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpoint = Dot((2, 2), color=BLUE) \n\t\tself.add(point)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it orange."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=ORANGE) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the hexagon by 60 degrees counterclockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=ORANGE) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.rotate(-60 * DEGREES), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 3 and height 2, centered at (0, 0)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=3, height=2) \n\t\trectangle.move_to((0, 0)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Add a text label 'B' at the coordinates (2, -1) of the rectangle."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=3, height=2) \n\t\tlabel = Text('B').move_to((2, -1)) \n\t\tself.add(rectangle, label)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a line segment and a circle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, 1), (2, -1)) \n\t\tcircle = Circle(radius=1) \n\t\tvgroup = VGroup(line, circle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, 1), (2, -1)) \n\t\tcircle = Circle(radius=1) \n\t\tvgroup = VGroup(line, circle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular dodecagon with side length 2 and color it brown."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tdodecagon = RegularPolygon(n=12, radius=2, color=BROWN) \n\t\tself.add(dodecagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the dodecagon by a factor of 1.5 in 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tdodecagon = RegularPolygon(n=12, radius=2, color=BROWN) \n\t\tself.add(dodecagon) \n\t\tself.play(dodecagon.animate.scale(1.5), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment connecting points (-1, 1) and (1, -1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-1, 1), (1, -1)) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a rectangle and a circle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=3, height=2) \n\t\tcircle = Circle(radius=1) \n\t\tvgroup = VGroup(rectangle, circle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 60 degrees counterclockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=3, height=2) \n\t\tcircle = Circle(radius=1) \n\t\tvgroup = VGroup(rectangle, circle) \n\t\tself.add(vgroup) \n\t\tself.play(vgroup.animate.rotate(60 * DEGREES), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 2.5 and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=2.5, color=PURPLE) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the heptagon to the right by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=2.5, color=PURPLE) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.shift(RIGHT * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create an arc with radius 3, angle of 180 degrees, and centered at (-1, -1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tarc = Arc(radius=3, start_angle=0, angle=180 * DEGREES) \n\t\tarc.move_to((-1, -1)) \n\t\tself.add(arc)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a trapezoid with base lengths 3 and 5, and height 4."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttrapezoid = Polygon((-2.5, -2), (2.5, -2), (3, 2), (-3, 2)) \n\t\tself.add(trapezoid)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a point at coordinates (0, 0) and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpoint = Dot((0, 0), color=GREEN) \n\t\tself.add(point)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular octagon with side length 3 and color it red."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\toctagon = RegularPolygon(n=8, radius=3, color=RED) \n\t\tself.add(octagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the octagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\toctagon = RegularPolygon(n=8, radius=3, color=RED) \n\t\tself.add(octagon) \n\t\tself.play(octagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (-1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((-1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Add a text label 'C' at the coordinates (0, -1) of the rectangle."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\tlabel = Text('C').move_to((0, -1)) \n\t\tself.add(rectangle, label)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a square and a circle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsquare = Square(side_length=2) \n\t\tcircle = Circle(radius=1) \n\t\tvgroup = VGroup(square, circle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 30 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsquare = Square(side_length=2) \n\t\tcircle = Circle(radius=1) \n\t\tvgroup = VGroup(square, circle) \n\t\tvgroup.rotate(-30 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular tetragon with side length 2 and color it gray."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttetragon = RegularPolygon(n=4, radius=2, color=GRAY) \n\t\tself.add(tetragon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the tetragon to the right by 3 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttetragon = RegularPolygon(n=4, radius=2, color=GRAY) \n\t\tself.add(tetragon) \n\t\tself.play(tetragon.animate.shift(RIGHT * 3), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a parallelogram with base lengths 4 and 2, and height 3."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tparallelogram = Polygon((-2, -1.5), (2, -1.5), (4, 1.5), (0, 1.5)) \n\t\tself.add(parallelogram)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a point at coordinates (1, -1) and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpoint = Dot((1, -1), color=YELLOW) \n\t\tself.add(point)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular pentagon with side length 2.5 and color it cyan."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2.5, color=CYAN) \n\t\tself.add(pentagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 120 degrees counterclockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2.5, color=CYAN) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(-120 * DEGREES), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 5 and height 3, centered at (1, -1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=5, height=3) \n\t\trectangle.move_to((1, -1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Add a text label 'D' at the coordinates (2, 1) of the rectangle."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=5, height=3) \n\t\tlabel = Text('D').move_to((2, 1)) \n\t\tself.add(rectangle, label)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a triangle and a circle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttriangle = Triangle() \n\t\tcircle = Circle(radius=1) \n\t\tvgroup = VGroup(triangle, circle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttriangle = Triangle() \n\t\tcircle = Circle(radius=1) \n\t\tvgroup = VGroup(triangle, circle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular nonagon with side length 3.5 and color it pink."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tnonagon = RegularPolygon(n=9, radius=3.5, color=PINK) \n\t\tself.add(nonagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the nonagon to the right by 4 units over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tnonagon = RegularPolygon(n=9, radius=3.5, color=PINK) \n\t\tself.add(nonagon) \n\t\tself.play(nonagon.animate.shift(RIGHT * 4), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a sector with radius 2, angle of 120 degrees, and centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsector = Sector(radius=2, start_angle=0, angle=120 * DEGREES) \n\t\tsector.move_to((1, 1)) \n\t\tself.add(sector)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a trapezium with base lengths 2 and 4, and height 3."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttrapezium = Polygon((-2, -1.5), (2, -1.5), (4, 1.5), (-4, 1.5)) \n\t\tself.add(trapezium)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a point at coordinates (-1, 2) and color it orange."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpoint = Dot((-1, 2), color=ORANGE) \n\t\tself.add(point)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it teal."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=TEAL) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the hexagon by 60 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=TEAL) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.rotate(-60 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 3 and height 5, centered at (-2, 2)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=3, height=5) \n\t\trectangle.move_to((-2, 2)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Add a text label 'E' at the coordinates (-1, -1) of the rectangle."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=3, height=5) \n\t\tlabel = Text('E').move_to((-1, -1)) \n\t\tself.add(rectangle, label)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a line segment and a circle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-1, -1), (1, 1)) \n\t\tcircle = Circle(radius=1) \n\t\tvgroup = VGroup(line, circle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 90 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-1, -1), (1, 1)) \n\t\tcircle = Circle(radius=1) \n\t\tvgroup = VGroup(line, circle) \n\t\tvgroup.rotate(-90 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 2.5 and color it lavender."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=2.5, color=LAVENDER) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the heptagon to the right by 3.5 units over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=2.5, color=LAVENDER) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.shift(RIGHT * 3.5), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a sector with radius 2.5, angle of 60 degrees, and centered at (-1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsector = Sector(radius=2.5, start_angle=0, angle=60 * DEGREES) \n\t\tsector.move_to((-1, 1)) \n\t\tself.add(sector)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a trapezoid with base lengths 2 and 5, and height 4."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttrapezoid = Polygon((-2.5, -2), (2.5, -2), (3.5, 2), (-3.5, 2)) \n\t\tself.add(trapezoid)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a point at coordinates (2, -2) and color it magenta."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpoint = Dot((2, -2), color=MAGENTA) \n\t\tself.add(point)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular octagon with side length 3 and color it brown."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\toctagon = RegularPolygon(n=8, radius=3, color=BROWN) \n\t\tself.add(octagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the octagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\toctagon = RegularPolygon(n=8, radius=3, color=BROWN) \n\t\tself.add(octagon) \n\t\tself.play(octagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (-1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((-1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Add a text label 'F' at the coordinates (0, -1) of the rectangle."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\tlabel = Text('F').move_to((0, -1)) \n\t\tself.add(rectangle, label)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a square and a circle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsquare = Square() \n\t\tcircle = Circle(radius=1) \n\t\tvgroup = VGroup(square, circle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 30 degrees clockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsquare = Square() \n\t\tcircle = Circle(radius=1) \n\t\tvgroup = VGroup(square, circle) \n\t\tvgroup.rotate(-30 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular nonagon with side length 2 and color it olive."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tnonagon = RegularPolygon(n=9, radius=2, color=OLIVE) \n\t\tself.add(nonagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the nonagon to the right by 2.5 units over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tnonagon = RegularPolygon(n=9, radius=2, color=OLIVE) \n\t\tself.add(nonagon) \n\t\tself.play(nonagon.animate.shift(RIGHT * 2.5), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a sector with radius 3, angle of 90 degrees, and centered at (0, 0)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsector = Sector(radius=3, start_angle=0, angle=90 * DEGREES) \n\t\tsector.move_to((0, 0)) \n\t\tself.add(sector)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a trapezium with base lengths 2 and 6, and height 4.5."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttrapezium = Polygon((-3, -2.25), (3, -2.25), (4, 2.25), (-4, 2.25)) \n\t\tself.add(trapezium)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a point at coordinates (-2, -2) and color it gray."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpoint = Dot((-2, -2), color=GRAY) \n\t\tself.add(point)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 3 and color it maroon."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=3, color=MAROON) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the hexagon by 45 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=3, color=MAROON) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.rotate(-45 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 5 and height 2, centered at (1, -2)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=5, height=2) \n\t\trectangle.move_to((1, -2)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Add a text label 'G' at the coordinates (2, 0) of the rectangle."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=5, height=2) \n\t\tlabel = Text('G').move_to((2, 0)) \n\t\tself.add(rectangle, label)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a line segment and a square to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-1, -1), (1, 1)) \n\t\tsquare = Square(side_length=2) \n\t\tvgroup = VGroup(line, square) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 60 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-1, -1), (1, 1)) \n\t\tsquare = Square(side_length=2) \n\t\tvgroup = VGroup(line, square) \n\t\tvgroup.rotate(-60 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 2.5 and color it navy."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=2.5, color=NAVY) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the heptagon to the right by 3 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=2.5, color=NAVY) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.shift(RIGHT * 3), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a sector with radius 2.5, angle of 120 degrees, and centered at (-1, -1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsector = Sector(radius=2.5, start_angle=0, angle=120 * DEGREES) \n\t\tsector.move_to((-1, -1)) \n\t\tself.add(sector)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a trapezoid with base lengths 3 and 7, and height 5."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttrapezoid = Polygon((-4, -2.5), (4, -2.5), (5, 2.5), (-5, 2.5)) \n\t\tself.add(trapezoid)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a point at coordinates (3, -3) and color it indigo."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpoint = Dot((3, -3), color=INDIGO) \n\t\tself.add(point)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular octagon with side length 4 and color it aqua."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\toctagon = RegularPolygon(n=8, radius=4, color=AQUA) \n\t\tself.add(octagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the octagon by 120 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\toctagon = RegularPolygon(n=8, radius=4, color=AQUA) \n\t\tself.add(octagon) \n\t\tself.play(octagon.animate.rotate(-120 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 6 and height 3, centered at (2, 2)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=6, height=3) \n\t\trectangle.move_to((2, 2)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Add a text label 'H' at the coordinates (3, 3) of the rectangle."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=6, height=3) \n\t\tlabel = Text('H').move_to((3, 3)) \n\t\tself.add(rectangle, label)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a line segment and a circle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-1, -1), (1, 1)) \n\t\tcircle = Circle(radius=1) \n\t\tvgroup = VGroup(line, circle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-1, -1), (1, 1)) \n\t\tcircle = Circle(radius=1) \n\t\tvgroup = VGroup(line, circle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular nonagon with side length 3 and color it olive."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tnonagon = RegularPolygon(n=9, radius=3, color=OLIVE) \n\t\tself.add(nonagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the nonagon to the right by 4 units over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tnonagon = RegularPolygon(n=9, radius=3, color=OLIVE) \n\t\tself.add(nonagon) \n\t\tself.play(nonagon.animate.shift(RIGHT * 4), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a sector with radius 3, angle of 90 degrees, and centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsector = Sector(radius=3, start_angle=0, angle=90 * DEGREES) \n\t\tsector.move_to((1, 1)) \n\t\tself.add(sector)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a trapezoid with base lengths 2 and 6, and height 4.5."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttrapezoid = Polygon((-3, -2.25), (3, -2.25), (4, 2.25), (-4, 2.25)) \n\t\tself.add(trapezoid)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a point at coordinates (-2, -2) and color it gray."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpoint = Dot((-2, -2), color=GRAY) \n\t\tself.add(point)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 3 and color it maroon."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=3, color=MAROON) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the hexagon by 45 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=3, color=MAROON) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.rotate(-45 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 5 and height 2, centered at (1, -2)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=5, height=2) \n\t\trectangle.move_to((1, -2)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Add a text label 'I' at the coordinates (2, 0) of the rectangle."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=5, height=2) \n\t\tlabel = Text('I').move_to((2, 0)) \n\t\tself.add(rectangle, label)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a square and a circle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsquare = Square() \n\t\tcircle = Circle(radius=1) \n\t\tvgroup = VGroup(square, circle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 30 degrees clockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsquare = Square() \n\t\tcircle = Circle(radius=1) \n\t\tvgroup = VGroup(square, circle) \n\t\tvgroup.rotate(-30 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a circle with radius 2 and center at the origin."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle(radius=2) \n\t\tself.add(circle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the circle to the right by 3 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle(radius=2) \n\t\tself.add(circle) \n\t\tself.play(circle.animate.shift(RIGHT * 3), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a square with side length 4 and color it red."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsquare = Square(side_length=4, color=RED) \n\t\tself.add(square)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the square by a factor of 2 in 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsquare = Square(side_length=4, color=RED) \n\t\tself.add(square) \n\t\tself.play(square.animate.scale(2), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a triangle with side lengths 3, 4, and 5."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttriangle = Polygon((-1.5, -2), (1.5, -2), (0, 2), color=YELLOW) \n\t\tself.add(triangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the triangle by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttriangle = Polygon((-1.5, -2), (1.5, -2), (0, 2), color=YELLOW) \n\t\tself.add(triangle) \n\t\tself.play(triangle.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-2, -1) to (2, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -1), (2, 1), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upward by 2 units over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -1), (2, 1), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular pentagon with side length 3."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=3, color=BLUE) \n\t\tself.add(pentagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the pentagon to the left by 4 units over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=3, color=BLUE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.shift(LEFT * 4), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create an ellipse with major axis 4 and minor axis 2."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tellipse = Ellipse(width=4, height=2, color=ORANGE) \n\t\tself.add(ellipse)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the ellipse by a factor of 1.5 in 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tellipse = Ellipse(width=4, height=2, color=ORANGE) \n\t\tself.add(ellipse) \n\t\tself.play(ellipse.animate.scale(1.5), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a point at coordinates (1, 1) and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpoint = Dot((1, 1), color=PURPLE) \n\t\tself.add(point)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 2 and color it cyan."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=2, color=CYAN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=2, color=CYAN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 3 and height 6, centered at (-1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=3, height=6) \n\t\trectangle.move_to((-1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Add a text label 'M' at the coordinates (0, 2) of the rectangle."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=3, height=6) \n\t\tlabel = Text('M').move_to((0, 2)) \n\t\tself.add(rectangle, label)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a line segment and a square to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-1, -1), (1, 1)) \n\t\tsquare = Square() \n\t\tvgroup = VGroup(line, square) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees counterclockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-1, -1), (1, 1)) \n\t\tsquare = Square() \n\t\tvgroup = VGroup(line, square) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular octagon with side length 2 and color it teal."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\toctagon = RegularPolygon(n=8, radius=2, color=TEAL) \n\t\tself.add(octagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the octagon upward by 3 units over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\toctagon = RegularPolygon(n=8, radius=2, color=TEAL) \n\t\tself.add(octagon) \n\t\tself.play(octagon.animate.shift(UP * 3), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular nonagon with side length 3 and color it pink."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tnonagon = RegularPolygon(n=9, radius=3, color=PINK) \n\t\tself.add(nonagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the nonagon by 90 degrees clockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tnonagon = RegularPolygon(n=9, radius=3, color=PINK) \n\t\tself.add(nonagon) \n\t\tself.play(nonagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line from (0, 0) to (3, 4)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((0, 0), (3, 4), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line downward by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((0, 0), (3, 4), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(DOWN * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create an equilateral triangle with side length 3 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttriangle = RegularPolygon(n=3, radius=3, color=YELLOW) \n\t\tself.add(triangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the triangle by a factor of 1.5 in 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttriangle = RegularPolygon(n=3, radius=3, color=YELLOW) \n\t\tself.add(triangle) \n\t\tself.play(triangle.animate.scale(1.5), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a point at coordinates (-1, -1) and color it orange."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpoint = Dot((-1, -1), color=ORANGE) \n\t\tself.add(point)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular decagon with side length 2 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tdecagon = RegularPolygon(n=10, radius=2, color=GREEN) \n\t\tself.add(decagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the decagon by 45 degrees counterclockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tdecagon = RegularPolygon(n=10, radius=2, color=GREEN) \n\t\tself.add(decagon) \n\t\tself.play(decagon.animate.rotate(-45 * DEGREES), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 2 and height 4, centered at (2, -1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=2, height=4) \n\t\trectangle.move_to((2, -1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Add a text label 'N' at the coordinates (2, 3) of the rectangle."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=2, height=4) \n\t\tlabel = Text('N').move_to((2, 3)) \n\t\tself.add(rectangle, label)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 90 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tvgroup.rotate(-90 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it violet."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=VIOLET) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the right by 3 units over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=VIOLET) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(RIGHT * 3), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular enneagon with side length 3 and color it brown."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tenneagon = RegularPolygon(n=9, radius=3, color=BROWN) \n\t\tself.add(enneagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the enneagon by 60 degrees counterclockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tenneagon = RegularPolygon(n=9, radius=3, color=BROWN) \n\t\tself.add(enneagon) \n\t\tself.play(enneagon.animate.rotate(-60 * DEGREES), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, -2) to (3, 2)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, -2), (3, 2), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upward by 4 units over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, -2), (3, 2), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 4), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create an equilateral triangle with side length 2 and color it pink."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttriangle = RegularPolygon(n=3, radius=2, color=PINK) \n\t\tself.add(triangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the triangle by a factor of 2 in 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttriangle = RegularPolygon(n=3, radius=2, color=PINK) \n\t\tself.add(triangle) \n\t\tself.play(triangle.animate.scale(2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a point at coordinates (2, 2) and color it teal."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpoint = Dot((2, 2), color=TEAL) \n\t\tself.add(point)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular dodecagon with side length 2 and color it gray."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tdodecagon = RegularPolygon(n=12, radius=2, color=GRAY) \n\t\tself.add(dodecagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the dodecagon by 30 degrees counterclockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tdodecagon = RegularPolygon(n=12, radius=2, color=GRAY) \n\t\tself.add(dodecagon) \n\t\tself.play(dodecagon.animate.rotate(-30 * DEGREES), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 3 and height 5, centered at (-2, 2)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=3, height=5) \n\t\trectangle.move_to((-2, 2)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Add a text label 'O' at the coordinates (-1, -2) of the rectangle."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=3, height=5) \n\t\tlabel = Text('O').move_to((-1, -2)) \n\t\tself.add(rectangle, label)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle, a square, and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\tsquare = Square() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, square, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 120 degrees clockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\tsquare = Square() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, square, triangle) \n\t\tvgroup.rotate(-120 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular pentadecagon with side length 2 and color it cyan."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentadecagon = RegularPolygon(n=15, radius=2, color=CYAN) \n\t\tself.add(pentadecagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the pentadecagon to the left by 4 units over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentadecagon = RegularPolygon(n=15, radius=2, color=CYAN) \n\t\tself.add(pentadecagon) \n\t\tself.play(pentadecagon.animate.shift(LEFT * 4), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular polygon with 20 sides, side length 2, and color it orange."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpolygon = RegularPolygon(n=20, radius=2, color=ORANGE) \n\t\tself.add(polygon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the polygon by 75 degrees counterclockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpolygon = RegularPolygon(n=20, radius=2, color=ORANGE) \n\t\tself.add(polygon) \n\t\tself.play(polygon.animate.rotate(-75 * DEGREES), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-2, -2) to (2, 2)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment to the right by 3 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(RIGHT * 3), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create an equilateral triangle with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttriangle = RegularPolygon(n=3, radius=2, color=YELLOW) \n\t\tself.add(triangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the triangle by a factor of 2 in 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttriangle = RegularPolygon(n=3, radius=2, color=YELLOW) \n\t\tself.add(triangle) \n\t\tself.play(triangle.animate.scale(2), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a square with side length 2 and color it blue."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsquare = Square(side_length=2, color=BLUE) \n\t\tself.add(square)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the square to the right by 3 units over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsquare = Square(side_length=2, color=BLUE) \n\t\tself.add(square) \n\t\tself.play(square.animate.shift(RIGHT * 3), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a circle with radius 1.5 and color it red."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle(radius=1.5, color=RED) \n\t\tself.add(circle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the circle by a factor of 2 in 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle(radius=1.5, color=RED) \n\t\tself.add(circle) \n\t\tself.play(circle.animate.scale(2), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a text object saying 'Hello, Manim!' and add it to the scene."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttext = Text('Hello, Manim!') \n\t\tself.add(text)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Fade in the text object over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttext = Text('Hello, Manim!') \n\t\tself.add(text) \n\t\tself.play(FadeIn(text), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-2, -2) to (2, 2) and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the line segment by 45 degrees counterclockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.rotate(-45 * DEGREES), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 3 and height 4 and color it orange."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=3, height=4, color=ORANGE) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the rectangle downward by 2 units over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=3, height=4, color=ORANGE) \n\t\tself.add(rectangle) \n\t\tself.play(rectangle.animate.shift(DOWN * 2), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a polygon with vertices at (-2, 0), (0, 2), and (2, 0) and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpolygon = Polygon((-2, 0), (0, 2), (2, 0), color=YELLOW) \n\t\tself.add(polygon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the polygon by a factor of 1.5 in 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpolygon = Polygon((-2, 0), (0, 2), (2, 0), color=YELLOW) \n\t\tself.add(polygon) \n\t\tself.play(polygon.animate.scale(1.5), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it pink."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=PINK) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the hexagon by 60 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=PINK) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.rotate(60 * DEGREES), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create an ellipse with x-radius 3 and y-radius 2 and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tellipse = Ellipse(width=6, height=4, color=PURPLE) \n\t\tself.add(ellipse)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Fade out the ellipse over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tellipse = Ellipse(width=6, height=4, color=PURPLE) \n\t\tself.add(ellipse) \n\t\tself.play(FadeOut(ellipse), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 2 and color it cyan."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=2, color=CYAN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the heptagon to the left by 3 units over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=2, color=CYAN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.shift(LEFT * 3), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a point at coordinates (2, 2) and color it teal."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpoint = Dot((2, 2), color=TEAL) \n\t\tself.add(point)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular dodecagon with side length 2 and color it gray."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tdodecagon = RegularPolygon(n=12, radius=2, color=GRAY) \n\t\tself.add(dodecagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the dodecagon by 30 degrees counterclockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tdodecagon = RegularPolygon(n=12, radius=2, color=GRAY) \n\t\tself.add(dodecagon) \n\t\tself.play(dodecagon.animate.rotate(-30 * DEGREES), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular pentagon with side length 2 and color it brown."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=BROWN) \n\t\tself.add(pentagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the pentagon upward by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=BROWN) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular octagon with side length 2 and color it olive."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\toctagon = RegularPolygon(n=8, radius=2, color=OLIVE) \n\t\tself.add(octagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the octagon by a factor of 1.5 in 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\toctagon = RegularPolygon(n=8, radius=2, color=OLIVE) \n\t\tself.add(octagon) \n\t\tself.play(octagon.animate.scale(1.5), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular tetradecagon with side length 2 and color it lime."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttetradecagon = RegularPolygon(n=14, radius=2, color=LIME) \n\t\tself.add(tetradecagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the tetradecagon to the right by 4 units over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttetradecagon = RegularPolygon(n=14, radius=2, color=LIME) \n\t\tself.add(tetradecagon) \n\t\tself.play(tetradecagon.animate.shift(RIGHT * 4), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular polygon with 20 sides, side length 2, and color it orange."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpolygon = RegularPolygon(n=20, radius=2, color=ORANGE) \n\t\tself.add(polygon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the polygon by 75 degrees counterclockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpolygon = RegularPolygon(n=20, radius=2, color=ORANGE) \n\t\tself.add(polygon) \n\t\tself.play(polygon.animate.rotate(-75 * DEGREES), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-2, -2) to (2, 2)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment to the right by 3 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(RIGHT * 3), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular polygon with 6 sides, side length 2, and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpolygon = RegularPolygon(n=6, radius=2, color=PURPLE) \n\t\tself.add(polygon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the polygon by 90 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpolygon = RegularPolygon(n=6, radius=2, color=PURPLE) \n\t\tself.add(polygon) \n\t\tself.play(polygon.animate.rotate(90 * DEGREES), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (0, 0) to (4, 0)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((0, 0), (4, 0), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upward by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((0, 0), (4, 0), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular polygon with 8 sides, side length 2, and color it teal."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpolygon = RegularPolygon(n=8, radius=2, color=TEAL) \n\t\tself.add(polygon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the polygon by a factor of 1.5 in 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpolygon = RegularPolygon(n=8, radius=2, color=TEAL) \n\t\tself.add(polygon) \n\t\tself.play(polygon.animate.scale(1.5), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (1, 1) to (-1, -1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((1, 1), (-1, -1), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the line segment by 45 degrees counterclockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((1, 1), (-1, -1), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.rotate(-45 * DEGREES), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular polygon with 10 sides, side length 2, and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpolygon = RegularPolygon(n=10, radius=2, color=YELLOW) \n\t\tself.add(polygon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the polygon to the left by 3 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpolygon = RegularPolygon(n=10, radius=2, color=YELLOW) \n\t\tself.add(polygon) \n\t\tself.play(polygon.animate.shift(LEFT * 3), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment downward by 2 units over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(DOWN * 2), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular polygon with 12 sides, side length 2, and color it blue."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpolygon = RegularPolygon(n=12, radius=2, color=BLUE) \n\t\tself.add(polygon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the polygon by a factor of 1.5 in 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpolygon = RegularPolygon(n=12, radius=2, color=BLUE) \n\t\tself.add(polygon) \n\t\tself.play(polygon.animate.scale(1.5), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-2, -2) to (2, 2)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the line segment by 45 degrees counterclockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.rotate(-45 * DEGREES), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular polygon with 6 sides, side length 2, and color it red."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpolygon = RegularPolygon(n=6, radius=2, color=RED) \n\t\tself.add(polygon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the polygon to the right by 3 units over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpolygon = RegularPolygon(n=6, radius=2, color=RED) \n\t\tself.add(polygon) \n\t\tself.play(polygon.animate.shift(RIGHT * 3), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-2, -2) to (2, 2)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the line segment by 45 degrees counterclockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.rotate(-45 * DEGREES), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular polygon with 8 sides, side length 2, and color it pink."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpolygon = RegularPolygon(n=8, radius=2, color=PINK) \n\t\tself.add(polygon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the polygon by a factor of 1.5 in 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpolygon = RegularPolygon(n=8, radius=2, color=PINK) \n\t\tself.add(polygon) \n\t\tself.play(polygon.animate.scale(1.5), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a square with side length 2 and color it red."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsquare = Square(side_length=2, color=RED) \n\t\tself.add(square)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the square upward by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsquare = Square(side_length=2, color=RED) \n\t\tself.add(square) \n\t\tself.play(square.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 3 and height 4."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=3, height=4, color=BLUE) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the rectangle by 90 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=3, height=4, color=BLUE) \n\t\tself.add(rectangle) \n\t\tself.play(rectangle.animate.rotate(90 * DEGREES), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create an ellipse with x-radius 2 and y-radius 3."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tellipse = Ellipse(width=4, height=6, color=GREEN) \n\t\tself.add(ellipse)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the ellipse by a factor of 1.5 in 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tellipse = Ellipse(width=4, height=6, color=GREEN) \n\t\tself.add(ellipse) \n\t\tself.play(ellipse.animate.scale(1.5), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a circle with radius 2 and color it orange."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle(radius=2, color=ORANGE) \n\t\tself.add(circle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the circle to the left by 3 units over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle(radius=2, color=ORANGE) \n\t\tself.add(circle) \n\t\tself.play(circle.animate.shift(LEFT * 3), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the hexagon by 120 degrees counterclockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.rotate(-120 * DEGREES), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (0, 0) to (4, 0)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((0, 0), (4, 0), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upward by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((0, 0), (4, 0), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular pentagon with side length 2 and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=PURPLE) \n\t\tself.add(pentagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the pentagon by a factor of 2 in 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=PURPLE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.scale(2), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment downward by 2 units over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(DOWN * 2), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular octagon with side length 2 and color it teal."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\toctagon = RegularPolygon(n=8, radius=2, color=TEAL) \n\t\tself.add(octagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the octagon by 90 degrees clockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\toctagon = RegularPolygon(n=8, radius=2, color=TEAL) \n\t\tself.add(octagon) \n\t\tself.play(octagon.animate.rotate(90 * DEGREES), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (1, 1) to (-1, -1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((1, 1), (-1, -1), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the line segment by 45 degrees counterclockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((1, 1), (-1, -1), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.rotate(-45 * DEGREES), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 2 and color it pink."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=2, color=PINK) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the heptagon by a factor of 1.5 in 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=2, color=PINK) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.scale(1.5), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-2, -2) to (2, 2)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the line segment by 45 degrees counterclockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.rotate(-45 * DEGREES), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it red."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=RED) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the right by 3 units over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=RED) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(RIGHT * 3), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-2, -2) to (2, 2)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the line segment by 45 degrees counterclockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.rotate(-45 * DEGREES), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular nonagon with side length 2 and color it blue."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tnonagon = RegularPolygon(n=9, radius=2, color=BLUE) \n\t\tself.add(nonagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the nonagon by a factor of 2 in 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tnonagon = RegularPolygon(n=9, radius=2, color=BLUE) \n\t\tself.add(nonagon) \n\t\tself.play(nonagon.animate.scale(2), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-1, -1) to (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-1, -1), (1, 1), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the line segment by 90 degrees clockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-1, -1), (1, 1), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.rotate(90 * DEGREES), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular decagon with side length 2 and color it orange."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tdecagon = RegularPolygon(n=10, radius=2, color=ORANGE) \n\t\tself.add(decagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the decagon downward by 3 units over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tdecagon = RegularPolygon(n=10, radius=2, color=ORANGE) \n\t\tself.add(decagon) \n\t\tself.play(decagon.animate.shift(DOWN * 3), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (0, 0) to (3, 0)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((0, 0), (3, 0), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the line segment by 60 degrees counterclockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((0, 0), (3, 0), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.rotate(-60 * DEGREES), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular dodecagon with side length 2 and color it pink."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tdodecagon = RegularPolygon(n=12, radius=2, color=PINK) \n\t\tself.add(dodecagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the dodecagon by a factor of 1.5 in 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tdodecagon = RegularPolygon(n=12, radius=2, color=PINK) \n\t\tself.add(dodecagon) \n\t\tself.play(dodecagon.animate.scale(1.5), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-2, 0) to (2, 0)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, 0), (2, 0), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upward by 1 unit over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, 0), (2, 0), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 1), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular pentagon with side length 2 and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=PURPLE) \n\t\tself.add(pentagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=PURPLE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(90 * DEGREES), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment downward by 2 units over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(DOWN * 2), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular octagon with side length 2 and color it teal."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\toctagon = RegularPolygon(n=8, radius=2, color=TEAL) \n\t\tself.add(octagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the octagon by 90 degrees clockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\toctagon = RegularPolygon(n=8, radius=2, color=TEAL) \n\t\tself.add(octagon) \n\t\tself.play(octagon.animate.rotate(90 * DEGREES), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (1, 1) to (-1, -1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((1, 1), (-1, -1), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the line segment by 45 degrees counterclockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((1, 1), (-1, -1), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.rotate(-45 * DEGREES), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 2 and color it pink."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=2, color=PINK) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the heptagon by a factor of 1.5 in 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=2, color=PINK) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.scale(1.5), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-2, -2) to (2, 2)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the line segment by 45 degrees counterclockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.rotate(-45 * DEGREES), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it red."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=RED) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the right by 3 units over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=RED) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(RIGHT * 3), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-2, -2) to (2, 2)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the line segment by 45 degrees counterclockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.rotate(-45 * DEGREES), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular nonagon with side length 2 and color it blue."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tnonagon = RegularPolygon(n=9, radius=2, color=BLUE) \n\t\tself.add(nonagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the nonagon by a factor of 2 in 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tnonagon = RegularPolygon(n=9, radius=2, color=BLUE) \n\t\tself.add(nonagon) \n\t\tself.play(nonagon.animate.scale(2), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-1, -1) to (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-1, -1), (1, 1), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the line segment by 90 degrees clockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-1, -1), (1, 1), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.rotate(90 * DEGREES), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular decagon with side length 2 and color it orange."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tdecagon = RegularPolygon(n=10, radius=2, color=ORANGE) \n\t\tself.add(decagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the decagon downward by 3 units over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tdecagon = RegularPolygon(n=10, radius=2, color=ORANGE) \n\t\tself.add(decagon) \n\t\tself.play(decagon.animate.shift(DOWN * 3), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-2, 0) to (2, 0)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, 0), (2, 0), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upward by 1 unit over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, 0), (2, 0), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 1), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular pentagon with side length 2 and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=PURPLE) \n\t\tself.add(pentagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=PURPLE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(90 * DEGREES), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment downward by 2 units over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(DOWN * 2), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular octagon with side length 2 and color it teal."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\toctagon = RegularPolygon(n=8, radius=2, color=TEAL) \n\t\tself.add(octagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the octagon by 90 degrees clockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\toctagon = RegularPolygon(n=8, radius=2, color=TEAL) \n\t\tself.add(octagon) \n\t\tself.play(octagon.animate.rotate(90 * DEGREES), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (1, 1) to (-1, -1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((1, 1), (-1, -1), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the line segment by 45 degrees counterclockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((1, 1), (-1, -1), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.rotate(-45 * DEGREES), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 2 and color it pink."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=2, color=PINK) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the heptagon by a factor of 1.5 in 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=2, color=PINK) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.scale(1.5), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-2, -2) to (2, 2)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the line segment by 45 degrees counterclockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.rotate(-45 * DEGREES), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it red."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=RED) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the right by 3 units over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=RED) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(RIGHT * 3), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-2, -2) to (2, 2)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the line segment by 45 degrees counterclockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.rotate(-45 * DEGREES), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular nonagon with side length 2 and color it blue."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tnonagon = RegularPolygon(n=9, radius=2, color=BLUE) \n\t\tself.add(nonagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the nonagon by a factor of 2 in 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tnonagon = RegularPolygon(n=9, radius=2, color=BLUE) \n\t\tself.add(nonagon) \n\t\tself.play(nonagon.animate.scale(2), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-1, -1) to (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-1, -1), (1, 1), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the line segment by 90 degrees clockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-1, -1), (1, 1), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.rotate(90 * DEGREES), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular decagon with side length 2 and color it orange."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tdecagon = RegularPolygon(n=10, radius=2, color=ORANGE) \n\t\tself.add(decagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the decagon downward by 3 units over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tdecagon = RegularPolygon(n=10, radius=2, color=ORANGE) \n\t\tself.add(decagon) \n\t\tself.play(decagon.animate.shift(DOWN * 3), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-2, 0) to (2, 0)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, 0), (2, 0), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upward by 1 unit over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, 0), (2, 0), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 1), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular pentagon with side length 2 and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=PURPLE) \n\t\tself.add(pentagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=PURPLE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(90 * DEGREES), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment downward by 2 units over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(DOWN * 2), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular octagon with side length 2 and color it teal."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\toctagon = RegularPolygon(n=8, radius=2, color=TEAL) \n\t\tself.add(octagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the octagon by 90 degrees clockwise over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\toctagon = RegularPolygon(n=8, radius=2, color=TEAL) \n\t\tself.add(octagon) \n\t\tself.play(octagon.animate.rotate(90 * DEGREES), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (1, 1) to (-1, -1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((1, 1), (-1, -1), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the line segment by 45 degrees counterclockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((1, 1), (-1, -1), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.rotate(-45 * DEGREES), run_time=1.5)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 2 and color it pink."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=2, color=PINK) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the heptagon by a factor of 1.5 in 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=2, color=PINK) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.scale(1.5), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a circle with radius 2 and color it red."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle(radius=2, color=RED) \n\t\tself.add(circle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the circle to the right by 3 units over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle(radius=2, color=RED) \n\t\tself.add(circle) \n\t\tself.play(circle.animate.shift(RIGHT * 3), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a square with side length 4 and color it blue."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsquare = Square(side_length=4, color=BLUE) \n\t\tself.add(square)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the square by a factor of 0.5 in 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsquare = Square(side_length=4, color=BLUE) \n\t\tself.add(square) \n\t\tself.play(square.animate.scale(0.5), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-2, -2) to (2, 2)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment to the right by 3 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(RIGHT * 3), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular pentagon with side length 3 and color it orange."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=3, color=ORANGE) \n\t\tself.add(pentagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=3, color=ORANGE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the left by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(LEFT * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 3 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0) and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upwards by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=ORANGE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the left by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(LEFT * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 3 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0) and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upwards by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=ORANGE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the left by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(LEFT * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 3 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0) and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upwards by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=ORANGE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the left by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(LEFT * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 3 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0) and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upwards by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=ORANGE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the left by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(LEFT * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 3 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0) and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upwards by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=ORANGE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the left by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(LEFT * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 3 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0) and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upwards by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=ORANGE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the left by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(LEFT * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 3 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0) and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upwards by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=ORANGE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the left by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(LEFT * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 3 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0) and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upwards by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=ORANGE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the left by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(LEFT * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 3 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0) and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upwards by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=ORANGE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the left by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(LEFT * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 3 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0) and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upwards by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=ORANGE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the left by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(LEFT * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 3 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0) and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upwards by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the square to the right by 4 units over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsquare = Square(side_length=5, color=CYAN) \n\t\tself.add(square) \n\t\tself.play(square.animate.shift(RIGHT * 4), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=ORANGE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Add a text label 'A' at the coordinates (2, -1) of the rectangle."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\tlabel = Text('A').move_to((2, -1)) \n\t\tself.add(rectangle, label)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the left by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(LEFT * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 3 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0) and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upwards by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the triangle by a factor of 0.5 in 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttriangle = RegularPolygon(n=3, radius=3, color=PINK) \n\t\tself.add(triangle) \n\t\tself.play(triangle.animate.scale(0.5), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a circle with radius 2 and color it red."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle(radius=2, color=RED) \n\t\tself.add(circle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the circle to the right by 3 units over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle(radius=2, color=RED) \n\t\tself.add(circle) \n\t\tself.play(circle.animate.shift(RIGHT * 3), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a square with side length 4 and color it blue."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsquare = Square(side_length=4, color=BLUE) \n\t\tself.add(square)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the square by a factor of 0.5 in 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsquare = Square(side_length=4, color=BLUE) \n\t\tself.add(square) \n\t\tself.play(square.animate.scale(0.5), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-2, -2) to (2, 2)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment to the right by 3 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-2, -2), (2, 2), color=GREEN) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(RIGHT * 3), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular pentagon with side length 3 and color it orange."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=3, color=ORANGE) \n\t\tself.add(pentagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=3, color=ORANGE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the left by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(LEFT * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 3 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0) and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upwards by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=ORANGE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the left by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(LEFT * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 3 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0) and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upwards by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=ORANGE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the left by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(LEFT * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 3 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0) and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upwards by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=ORANGE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the left by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(LEFT * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 3 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0) and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upwards by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=ORANGE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the left by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(LEFT * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 3 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0) and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upwards by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=ORANGE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the left by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(LEFT * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 3 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0) and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upwards by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=ORANGE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the left by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(LEFT * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 3 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0) and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upwards by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=ORANGE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the left by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(LEFT * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 3 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0) and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upwards by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=ORANGE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the left by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(LEFT * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 3 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0) and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upwards by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=ORANGE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the left by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(LEFT * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 3 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0) and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upwards by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Scale the triangle by a factor of 0.5 in 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\ttriangle = RegularPolygon(n=3, radius=3, color=PINK) \n\t\tself.add(triangle) \n\t\tself.play(triangle.animate.scale(0.5), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the pentagon by 90 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=ORANGE) \n\t\tself.add(pentagon) \n\t\tself.play(pentagon.animate.rotate(-90 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a rectangle with width 4 and height 2, centered at (1, 1)."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\trectangle = Rectangle(width=4, height=2) \n\t\trectangle.move_to((1, 1)) \n\t\tself.add(rectangle)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a VGroup and add a circle and a triangle to it."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the VGroup by 45 degrees clockwise over 1.5 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tcircle = Circle() \n\t\ttriangle = Polygon((-1, -1), (1, -1), (0, 1)) \n\t\tvgroup = VGroup(circle, triangle) \n\t\tvgroup.rotate(-45 * DEGREES) \n\t\tself.add(vgroup)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular hexagon with side length 2 and color it yellow."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the hexagon to the left by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\thexagon = RegularPolygon(n=6, radius=2, color=YELLOW) \n\t\tself.add(hexagon) \n\t\tself.play(hexagon.animate.shift(LEFT * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular heptagon with side length 3 and color it green."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Rotate the heptagon by 60 degrees counterclockwise over 2 seconds."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\theptagon = RegularPolygon(n=7, radius=3, color=GREEN) \n\t\tself.add(heptagon) \n\t\tself.play(heptagon.animate.rotate(-60 * DEGREES), run_time=2)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a line segment from (-3, 0) to (3, 0) and color it purple."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Move the line segment upwards by 2 units over 1 second."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tline = Line((-3, 0), (3, 0), color=PURPLE) \n\t\tself.add(line) \n\t\tself.play(line.animate.shift(UP * 2), run_time=1)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a square with side length 5 and color it cyan."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tsquare = Square(side_length=5, color=CYAN) \n\t\tself.add(square)"}]}
{"messages": [{"role": "system", "content": "Write Manim scripts for animations in Python. Generate code, not text."}, {"role": "user", "content": "Create a regular pentagon with side length 2 and color it orange."}, {"role": "assistant", "content": "from manim import *\nclass MyScene(Scene):\n\tdef construct(self):\n\t\tpentagon = RegularPolygon(n=5, radius=2, color=ORANGE) \n\t\tself.add(pentagon)"}]}
